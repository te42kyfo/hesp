#!/usr/bin/guile \
-e main -s
!#

(use-modules (ice-9 pretty-print)
             (ice-9 format)
             (ice-9 rdelim))

(setenv "LTDL_LIBRARY_PATH" "/home/marco/userdata/proj/8th_semester/hesp/repo/guile-opencl/")
(load-extension "libguile-opencl" "init_guile_opencl")

(define (hesp-print obj)
  (let* ((alist (cl-info obj))
         (maxlen (apply max (map (lambda (x) (string-length (car x))) alist)))
         (fmt (format #f "~~~da = ~~a~~%" maxlen)))
    (map (lambda (x)
           (format #t fmt (car x) (cdr x)))
         (cl-info obj))))

(define (hesp-select list name)
  (let* ((len (length list))
         (selection
          (if (= 1 len)
              (car list)
              (begin
                (format #t "Avilable ~as:~%" name)
                (for-each (lambda (item id)
                            (format #t "~:@(~a~) #~d:~%" name id)
                            (hesp-print item) (newline))
                          list (iota len))
                (format #t "Choose a ~a (from 0 to ~d" name (1- len))
                (list-ref platforms (string->number (read-line)))))))
    (format #t "~%Using the following ~a:~%" name)
    (hesp-print selection)
    selection))

(define (main args)
  (let ((platform (hesp-select (cl-get-platforms) "platform")))
    (let ((device (hesp-select (cl-get-devices platform) "device")))
      (format #t "TODO~%"))))
